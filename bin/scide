#!/usr/bin/env bash
set -e

version=2.0.1

bold=1
red=31
green=32
yellow=33
magenta=35
cyan=36
gray=90

function cleanup() {
  local tmp_dir="$1"
  test -n "$tmp_dir" && test -d "$tmp_dir" && rm -fr "$tmp_dir"
}

function command_exists() {
  local command="$1"
  hash "$command" &>/dev/null
}

function fail() {
  local code="$1"
  shift
  >&2 echo "$@"
  exit $code
}

function log_color() {
  local color="$1"
  shift
  local message="$@"

  if is_interactive; then
    >&2 echo -e "\033[${color}m${message}\033[0m"
  else
    >&2 echo "$message"
  fi
}

function is_interactive() {
  test "${-#*i}" != "$-" || test -t 0 || test -n "$PS1"
}

function is_relative() {
  local path="$1"
  [[ "$path" = /* || "$path" = ~* ]]
}

tmp_dir=`mktemp -d -t scide.XXXXXX`
trap "cleanup $tmp_dir" EXIT

auto="${SCIDE_AUTO:-false}"
dry_run="${SCIDE_DRY_RUN:-false}"
projects_dir="$SCIDE_PROJECTS"
screen_bin="${SCIDE_BIN:-screen}"
screen_default_config="~/.screenrc.default"
screen_options="${SCIDE_SCREEN:-"-U"}"

POSITIONAL=()
while [[ "$#" -gt 0 ]]; do
  option="$1"
  shift

  case "$option" in
    -a|--auto)
      auto=true
    ;;
    -b|--bin)
      screen_bin="$1"
      shift
    ;;
    --default)
      screen_default_config="$1"
      shift
    ;;
    -d|--dry-run)
      dry_run=true
    ;;
    -p|--projects)
      projects_dir="$1"
      shift
    ;;
    -s|--screen)
      screen_options="$1"
      shift
    ;;
    -v|--version)
      echo "$(basename "$0") $version"
      exit 0
    ;;
    *)
      POSITIONAL+=("$1")
      shift
    ;;
  esac
done

# Restore positional parameters.
set -- "${POSITIONAL[@]}"

dir="$1"

[ "$auto" != "false" ] && fail 42 "Auto not yet implemented"
[ "$dry_run" != "false" ] && fail 42 "Dry run not yet implemented"
test -n "$projects_dir" && fail 42 "Projects directory not yet implemented"

if ! command_exists "$screen_bin"; then
  if test -e "$screen_bin"; then
    test -x "$screen_bin" || fail 101 "Screen binary '${screen_bin}' is not executable"
    is_relative "$screen_bin" && [[ "$screen_bin" == . ]] || screen_bin="./$screen_bin"
  else
    fail 100 "Screen binary '${screen_bin}' not found"
  fi
fi

test -e .screenrc || fail 102 ".screenrc not found in current directory $PWD"

"$screen_bin" $screen_options -c .screenrc
